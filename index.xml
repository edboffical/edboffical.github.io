<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>callous&#39; blog</title>
    <link>https://callous.cn/</link>
    <description>Recent content on callous&#39; blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 18 Jan 2021 18:00:00 +0800</lastBuildDate><atom:link href="https://callous.cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>记录一次游戏服务 oom 抢救</title>
      <link>https://callous.cn/blog/tech/oom/</link>
      <pubDate>Mon, 18 Jan 2021 18:00:00 +0800</pubDate>
      
      <guid>https://callous.cn/blog/tech/oom/</guid>
      <description>起因 原本愉快的周日晚上，突然有客服部门的妹子在群里说游戏挂了！进不去了！还有一堆房间不存在的问题！
先说下这个挂掉的游戏，是从别的部门接手过来的，原班人马基本都离职了，留下一堆杂乱的资料，game 服务是用 c++ 写的。
解救玩家 因为事情出得比较急，而且导致了大规模的玩家不能登录游戏，所以领导的首先要求是解救玩家。单从现象上分析，大致猜测是某些原因导致的 game 服务崩溃或者失去响应，导致玩家无法进入房间。玩家的 room 信息应该会存在缓存当中。大概看了下代码，定位到关键位置，这里贴一下部分代码：
这里不得不吐槽一下，既然 Enter 房间不成功都会 Remove 掉这个缓存，在房间不存在的时候竟然不做处理，直接返回。另外，更不能理解的是重启服务也不会删除这个缓存，也就是说 game 因为故障崩溃掉的话，这里的玩家永远都会提示 “房间不存在”。
现在知道了，玩家的 room 缓存在 memcache 里，只要清除掉这些失效的 key，就能解放这些玩家。但是问题又来了，仅凭 key 的 value 无法判断出这个玩家的 room 是否失效了。于是又去看代码，最后的解决方案是带这个 key 前缀的键值全部清除，虽然这样会对正常游戏的玩家有点小影响，但也是总结了诸多方案中影响最小的方案，也幸亏他不完全是依赖缓存去找玩家的房间。
平时工作中接触的大部分是 redis，对 memcache 相对了解较少。看了官方文档后，发现并没有批量删除的方法，也没有获取一个前缀所有 key 的类似命令，所以批量删除只能写脚本。
然后问题又来了，我们并不知道哪些玩家卡在房间里了，如果是全服遍历，明显不可能，因为有大概　1000w 的用户数据。
最后的方案，是从数据库查询导出了所有当天登陆过得用户，大概是 9w 多条，还能接受。
于是写了下面的 go 程序：
mc := memcache.New(&amp;#34;memcache.xxxxxxx.xxxxx.xxxx.com:11211&amp;#34;) fmt.Println(&amp;#34;memcache error:&amp;#34;, mc.Ping()) time.Sleep(time.Second * 2) dealCount := 0 for _, v := range config.Records { key := &amp;#34;NOWSEVERID_&amp;#34; + v.</description>
    </item>
    
    <item>
      <title>33</title>
      <link>https://callous.cn/blog/life/33/</link>
      <pubDate>Sun, 29 Nov 2020 15:59:41 +0800</pubDate>
      
      <guid>https://callous.cn/blog/life/33/</guid>
      <description>我要给你留一块空地 2020.11.29 说实话，是大学毕业之后才开始慢慢懂得，什么是感情。有时候我回想起来，以前说你，把你气哭，总感觉很愧疚。但是说实话（我发誓），从开始到现在，都是喜欢你的，从来都没觉得你不好，而且慢慢就变得越来越喜欢。第一次去你家，给我的最大感触，其实不是见家长的紧张。从去了你家之后，才知道你就是一棵“温室小白菜”，在家不干活，不愁吃，不愁穿，就是一个小公主。所以那时候，我最大的感触，是看着坐在摇椅上，跷跷脚的你，在我家里却给我洗内裤、洗袜子。这段时间，一直在往医院赶，你大都陪着我。虽然有时候也会发小脾气，会抛下一个手机没电的人。但就像老一辈说的，只要“内心好”，就足够。我就想着，等到家了，我就不跟你生气了，我要抱抱你。最近心情不好，感觉有时候影响了你，看到你也不开心，我就又过来抱抱你，但真的有点奇怪，控制不了自己，又不想你被影响，有时候甚至连脸上该带什么表情都不知道。
真的喜欢，大概就是，突然想拿出拍立得，拍拍你，突然想拿出电脑，给你写一段文字；大概就是，虽然你会有“小心机”，让我airdrop给你照片，然后看着exif信息，发小脾气，但我都能包容，都觉得你可爱；大概就是，你喜欢宅家，但也每次都会出去陪我走。
我其实是一个很习惯做独行侠的人，但最近老希望和你多呆一会。</description>
    </item>
    
    <item>
      <title>Mimi</title>
      <link>https://callous.cn/blog/life/mimi/</link>
      <pubDate>Tue, 10 Nov 2020 23:03:22 +0800</pubDate>
      
      <guid>https://callous.cn/blog/life/mimi/</guid>
      <description>狗是人类最好的朋友 有时候总是觉得世界是有造物主的，科学的解释，宇宙起源于大爆炸，但总很难理解一抔没有思想的尘土何以造就有情感和智慧的生物。小时候总会想象一个场景：有一天，造物主召集了地球上的所有生物，对人类的可耻行为进行审判，所有的生物都唾弃人类的时候，只有猫和狗，投了反对票。猫和狗都是我很喜欢的家养宠物，但在我的主观感受上，狗与人的情感联结似乎更加密切。
前几年，我总爱半夜出门吃夜宵。也是一个普通的夜宵日，碰见了你。当时的你，毛发乱的像一颗球，拖着牵引绳，一看就是离家出走。如果不是你也喜欢出门吃夜宵，那我们大概也不会相遇。那会是冬天，很冷，于是我决定接济你一晚，第二天带你找主人。后来才知道，你是家里第二个毛孩子，和大哥不和，才决心离家出走。你的原主人问我愿不愿意领养你，我就欣然答应了。
第一天晚上，就感觉你好像也喜欢和我一起，可能是之前的主人对你不好。在我家你也是第二个毛孩子，然而还好，66（大白狗）像是一个大哥，在家有吵闹，在外都护着你。听说你们狗一生只认一个主人，66认的是我妈。你应该不是因为因为怕争宠，才认的我吧？你肯定也明白，只有我会在雨天抱着你回家，只有我会给你多些吃的，或者说你一直都觉得是我帮你脱离了苦海😊，总之你只认我，无论我回校读书几个月，只要一回家，你总抛弃我妈，跟我形影不离，好像真的就怕我的屁掉了，你接不到。一起吃夜宵、上网、逛街、熬夜，永远都跟在我身边，只要一下不见我，就开始慌张，有时候我也会躲在角落里，看慌张的你，然后哈哈笑。我还带你去过学校，为了躲保安，拎着你翻墙，还给围栏捅了一刀。直到我工作，还以为有能力把你接到我身边。我把你接来我的城市，在房子里给你安排了一个角落。但是那会，老大也是初入社会，以为工作除了认真别无选择。我总很晚下班，然后才带你在小区走一遭。那段时间，你一天就外出一次，所有屎尿都得憋到晚上，一定很难受，但每次带你出门，你都开心到发癫，不过好像也从来没有怪过我。就这样过了大半年，直到我被通知要“处理掉”你。那时候虽然有点无奈，但毕竟这大半年，你的生活质量很不高，就决定送你回去了。
后来我也是很久回一次家，你也还是和以前一样。只要我回来，就跟着我。你一定很期待我回家，每次返程都想跳上车跟我走。一直想着，等以后有条件了，再接你过来，直到11月9日，你的生命戛然而止，没有告别，我也再也没有机会了。
我不会忘记我的小棕狗，你让我懂得了珍惜身边的人和东西，谢谢你这些年的陪伴。</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://callous.cn/about/</link>
      <pubDate>Tue, 10 Nov 2020 23:03:11 +0800</pubDate>
      
      <guid>https://callous.cn/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2019抓取爱奇艺视频原地址</title>
      <link>https://callous.cn/blog/tech/iqiyi/</link>
      <pubDate>Sat, 29 Jun 2019 23:03:01 +0800</pubDate>
      
      <guid>https://callous.cn/blog/tech/iqiyi/</guid>
      <description>写这篇文章的目的 记录一下自己做过的事和学过的东西，希望大家抱着学习的目的来探讨。
过程 因为我对移动端的涉猎并不多，所以这次还是拿爱奇艺的网站来研究。配合 chrome dev tools （真好用），我发现pc端网页采用了hls协议，视频被切成 9 - 10 秒，这个可以用 ffmpeg 来下载列表视频，然后合成文件。因为游戏服务端的开发工作，我并没有很多空闲的时间，所以我转而研究了手机网页端。但其实两个分析的思路都差不多&amp;hellip;&amp;hellip;..
开始 先把 chrome dev tools 的模式切换到手机模式，然后随便点进一个电视剧或者电影的播放页面，刷新之后很容易找到请求视频地址的连接，如下图： 这里大概列下参数，太多了，一些可以断定的、可为空的或者不变的我就跳过了（可以看下面的js代码，有些直接就写死了）：
tvid=2763030300 // 电视剧Id &amp;amp;vid=efa9e607d213c7bb066360f0005db9c6 // 视频Id &amp;amp;bid=300 // 跟清晰度有关 下同 &amp;amp;abid=300 // 高清是300 清晰是200 &amp;amp;src=02020031010000000000 // 不变 &amp;amp;uid=1150484048 // uid 或空 &amp;amp;ut=1 // 不变 &amp;amp;ori=h5 // 来源 不变 &amp;amp;ps=0 // 不变 &amp;amp;messageId=dash_445455783d1046029fef03f7c3ba0f9f &amp;amp;ost=0 不变 &amp;amp;preIdAll= 不变 &amp;amp;locale=zh_cn 不变 &amp;amp;dfp=a0c99fd2610cf0473db8c0a7a62ac5a31577353dc9d69a44d2a164beb455ffa1fd // 可为空 &amp;amp;k_tag=1 // 不变 &amp;amp;k_ft1=18141941858304 &amp;amp;k_ft5=1 // 不变 &amp;amp;k_err_retries=3 // 不变 &amp;amp;k_uid=uct4vh5s98nnnm00uxfwg73l // 可为随机32位 String &amp;amp;pt=0 // 不变 &amp;amp;lid= // 不变 &amp;amp;cf= // 不变 &amp;amp;ct= // 不变 &amp;amp;ve=4d0345aec113399e2fc983530b36a907 &amp;amp;qd_v=2 // 暂时不变 &amp;amp;tm=1561334052647 // 时间戳 &amp;amp;qdy=a // 不变 &amp;amp;qds=0 // 不变 &amp;amp;vf=64adc57825317ca25c852960f19e3422 &amp;amp;callback=Z1561334031787 看了下大概的参数，然后在 chrome dev tools的资源页面搜索了一下关键字 k_uid，当然是混淆过的js，还是一行。 用工具自带的preety print功能后，稍微能看一点（感觉chrome事先都猜到了你想要的所有东西），这里上图： 分析参数 现在我们剩下需要分析的参数是：messageId,k_ft1,ve 和上图函数里没有列出的callback和vf，我们一个个来</description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>https://callous.cn/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://callous.cn/archives/</guid>
      <description>archives</description>
    </item>
    
  </channel>
</rss>
